Notes
---
  Browser = HTML Renderer + CSS Parser + JS Engine 

  Browser Family: 
  ---
    Chrome, Firefox, Safari, Edge, IE, Opera, Brave 

 
  Safari by Apple
    Webkit Core (Open Sourced) 
    CSS prefix -webkit 

  Firefox by Mozilla 
    Mozilla Core (Open Sourced) 
    CSS prefix -moz 

  Chrome By Google
    Chromium Core (Open Sourced)  = Webkit Core + Mozilla Core + Google's own codebase 
    CSS prefix -webkit 

  Opera by Opera 
    Chromium Core (Open Source)
    CSS prefix -webkit 

  Edge by Microsoft
    Chromium Core (Open Source)
    CSS prefix -webkit 

  Brave 
    Chromium Core (Open Source)
    CSS prefix -webkit 



===
Layout
---
  Types of Layouts
  ---
    1. Fixed Layout 
    2. Fluid Layout 

HTML - Structural Layer
CSS - Presentation Layer
JS - Interaction Layer 


Types of Elements
--
  1. Block Level Elements
      div, p, h1-h6, li, ul, header, nav, footer, main, section

  2. Inline Elements 
      a, img, span, button


Naming conventions
--

  File Names 
  --
    All file names should be in lowercase.
    Do not underscore in file names 
    some valid file names: contact-us.html, main.css, main.js 

  Id's and css classes 
  ---
    camelCase (Recommend) or kebab-case 
    some valid names: slideContainer, slide-container 
    Invalid names: SlideContainer, slide_container, slide container

  --



---

Structural Layer - HTML [DONE] 

Presentation Layer - CSS 
  CSS 
  Responsive CSS 

Interaction Layer - JS 
  Basic JS 
  HTML 5 JS API's 
  Custom Elements 

Web Conformance Guideline

---

CSS 
---
  Cascading Style Sheet (CSS)

Types of Styles
---
  1. Inline Styles 
      * writing styles directly in elements 
      
      Disadv
      ---
        * styles can't be re-used in other elements 
        * Styles can't be re-used in other pages 
        * mixing both html and css styles together is a bad practice

  2. Internal Styles 
      * writing the styles inside the html page itself
      * styles can be re-used in other elements within the same html file 
      
      Disadv
      --
      * Styles can't be re-used in other pages
      * mixing both html and css styles together is a bad practice

  3. External Styles
      * Writing the styles in separate css file
      * styles can be re-used in other elements 
      * Styles can be re-used in other pages
      * HTML and css files are logically separately. 

---

CSS Syntax
----
  selector {
    /* style definition */
    property: value;
    property: value;
  }

Selectors
--
  1. Element Selector    (header, nav, )
  2. ID Selector (#)
  3. Class Selector 
  4. Attribute Selector [TODO]
  5. Pseudo Selector [TODO]

--



CSS Precedence
--
  User Agent Style => External Style => Internal Style => Inline Style 

WCAG 
--
Accessibility 
---
  4 Principles 
  --
    perceivable, operable, understandable, and robust.

  Read more: https://www.w3.org/TR/WCAG21/#perceivable



RWD 
--
  * making the website accessible to wide array of device form factors such as ...
    small mobile phones, larger screen phones, tablets, laptops, desktops, tv's 

  CSS3 Media Queries 
  --
    
  
SASS
---
  SCSS / SASS => (Preprocessor) => CSS 


